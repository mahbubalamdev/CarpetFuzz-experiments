{"rsent": [{"cmd": "jpegtran", "option": "-icc", "sent": "Note that this will cause jpegtran to ignore any APP2 markers in the input file, even if -copy all or -copy icc is specified."}, {"cmd": "jpegtran", "option": "-debug", "sent": "Same as -verbose ."}], "non_rsent": [{"cmd": "jpegtran", "option": "-optimize", "sent": "Perform optimization of entropy encoding parameters."}, {"cmd": "jpegtran", "option": "-progressive", "sent": "Create progressive JPEG file."}, {"cmd": "jpegtran", "option": "-restart", "sent": "Emit a JPEG restart marker every N MCU rows, or every N MCU blocks if B is attached to the number."}, {"cmd": "jpegtran", "option": "-arithmetic", "sent": "Use arithmetic coding."}, {"cmd": "jpegtran", "option": "-scans", "sent": "Use the scan script given in the specified text file."}, {"cmd": "jpegtran", "option": "-scans", "sent": "See cjpeg (1) for more details about these switches."}, {"cmd": "jpegtran", "option": "-scans", "sent": "If you specify none of these switches, you get a plain baseline-JPEG output file."}, {"cmd": "jpegtran", "option": "-scans", "sent": "The quality setting and so forth are determined by the input file."}, {"cmd": "jpegtran", "option": "-scans", "sent": "The image can be losslessly transformed by giving one of these switches"}, {"cmd": "jpegtran", "option": "-flip", "sent": "Mirror image horizontally (left-right)."}, {"cmd": "jpegtran", "option": "-flip", "sent": "Mirror image vertically (top-bottom)."}, {"cmd": "jpegtran", "option": "-rotate", "sent": "Rotate image 90 degrees clockwise."}, {"cmd": "jpegtran", "option": "-rotate", "sent": "Rotate image 180 degrees."}, {"cmd": "jpegtran", "option": "-rotate", "sent": "Rotate image 270 degrees clockwise (or 90 ccw)."}, {"cmd": "jpegtran", "option": "-transpose", "sent": "Transpose image (across UL-to-LR axis)."}, {"cmd": "jpegtran", "option": "-transverse", "sent": "Transverse transpose (across UR-to-LL axis)."}, {"cmd": "jpegtran", "option": "-transverse", "sent": "The transpose transformation has no restrictions regarding image dimensions."}, {"cmd": "jpegtran", "option": "-transverse", "sent": "The other transformations operate rather oddly if the image dimensions are not a multiple of the iMCU size (usually 8 or 16 pixels), because they can only transform complete blocks of DCT coefficient data in the desired way."}, {"cmd": "jpegtran", "option": "-transverse", "sent": "jpegtran s default behavior when transforming an odd-size image is designed to preserve exact reversibility and mathematical consistency of the transformation set."}, {"cmd": "jpegtran", "option": "-transverse", "sent": "As stated, transpose is able to flip the entire image area."}, {"cmd": "jpegtran", "option": "-transverse", "sent": "Horizontal mirroring leaves any partial iMCU column at the right edge untouched, but is able to flip all rows of the image."}, {"cmd": "jpegtran", "option": "-transverse", "sent": "Similarly, vertical mirroring leaves any partial iMCU row at the bottom edge untouched, but is able to flip all columns."}, {"cmd": "jpegtran", "option": "-transverse", "sent": "The other transforms can be built up as sequences of transpose and flip operations; for consistency, their actions on edge pixels are defined to be the same as the end result of the corresponding transpose-and-flip sequence."}, {"cmd": "jpegtran", "option": "-transverse", "sent": "For practical use, you may prefer to discard any untransformable edge pixels rather than having a strange-looking strip along the right and/or bottom edges of a transformed image."}, {"cmd": "jpegtran", "option": "-transverse", "sent": "To do this, add the -trim switch:"}, {"cmd": "jpegtran", "option": "-trim", "sent": "Drop non-transformable edge blocks."}, {"cmd": "jpegtran", "option": "-trim", "sent": "Obviously, a transformation with -trim is not reversible, so strictly speaking jpegtran with this switch is not lossless."}, {"cmd": "jpegtran", "option": "-trim", "sent": "Also, the expected mathematical equivalences between the transformations no longer hold."}, {"cmd": "jpegtran", "option": "-trim", "sent": "For example, -rot 270 -trim trims only the bottom edge, but -rot 90 -trim followed by -rot 180 -trim trims both edges."}, {"cmd": "jpegtran", "option": "-perfect", "sent": "If you are only interested in perfect transformations, add the -perfect switch."}, {"cmd": "jpegtran", "option": "-perfect", "sent": "This causes jpegtran to fail with an error if the transformation is not perfect."}, {"cmd": "jpegtran", "option": "-perfect", "sent": "For example, you may want to do (jpegtran -rot 90 -perfect foojpg || djpeg foojpg | pnmflip -r90 | cjpeg) to do a perfect rotation, if available, or an approximated one if not."}, {"cmd": "jpegtran", "option": "-perfect", "sent": "This version of jpegtran also offers a lossless crop option, which discards data outside of a given image region but losslessly preserves what is inside."}, {"cmd": "jpegtran", "option": "-perfect", "sent": "Like the rotate and flip transforms, lossless crop is restricted by the current JPEG format; the upper left corner of the selected region must fall on an iMCU boundary."}, {"cmd": "jpegtran", "option": "-perfect", "sent": "If it doesnt, then it is silently moved up and/or left to the nearest iMCU boundary (the lower right corner is unchanged"}, {"cmd": "jpegtran", "option": "-perfect", "sent": "Thus, the output image covers at least the requested region, but it may cover more."}, {"cmd": "jpegtran", "option": "-perfect", "sent": "The adjustment of the region dimensions may be optionally disabled by attaching an f character (force) to the width or height number."}, {"cmd": "jpegtran", "option": "-perfect", "sent": "The image can be losslessly cropped by giving the switch:"}, {"cmd": "jpegtran", "option": "-crop", "sent": "Crop the image to a rectangular region of width W and height H, starting at point X,Y."}, {"cmd": "jpegtran", "option": "-crop", "sent": "The lossless crop feature discards data outside of a given image region but losslessly preserves what is inside."}, {"cmd": "jpegtran", "option": "-crop", "sent": "Like the rotate and flip transforms, lossless crop is restricted by the current JPEG format; the upper left corner of the selected region must fall on an iMCU boundary."}, {"cmd": "jpegtran", "option": "-crop", "sent": "If it doesnt, then it is silently moved up and/or left to the nearest iMCU boundary (the lower right corner is unchanged If W or H is larger than the width/height of the input image, then the output image is expanded in size, and the expanded region is filled in with zeros (neutral gray)."}, {"cmd": "jpegtran", "option": "-crop", "sent": "Attaching an f character (flatten) to the width number will cause each block in the expanded region to be filled in with the DC coefficient of the nearest block in the input image rather than grayed out."}, {"cmd": "jpegtran", "option": "-crop", "sent": "Attaching an r character (reflect) to the width number will cause the expanded region to be filled in with repeated reflections of the input image rather than grayed out."}, {"cmd": "jpegtran", "option": "-crop", "sent": "A complementary lossless wipe option is provided to discard (gray out) data inside a given image region while losslessly preserving what is outside:"}, {"cmd": "jpegtran", "option": "-wipe", "sent": "Wipe (gray out) a rectangular region of width W and height H from the input image, starting at point X,Y. Attaching an f character (flatten) to the width number will cause the region to be filled with the average of adjacent blocks rather than grayed out."}, {"cmd": "jpegtran", "option": "-wipe", "sent": "If the wipe region and the region outside the wipe region, when adjusted to the nearest iMCU boundary, form two horizontally adjacent rectangles, then attaching an r character (reflect) to the width number will cause the wipe region to be filled with repeated reflections of the outside region rather than grayed out."}, {"cmd": "jpegtran", "option": "-wipe", "sent": "A lossless drop option is also provided, which allows another JPEG image to be inserted (dropped) into the input image data at a given position, replacing the existing image data at that position:"}, {"cmd": "jpegtran", "option": "-drop", "sent": "Drop (insert) another image at point X,Y"}, {"cmd": "jpegtran", "option": "-drop", "sent": "Both the input image and the drop image must have the same subsampling level."}, {"cmd": "jpegtran", "option": "-drop", "sent": "It is best if they also have the same quantization (quality Otherwise, the quantization of the output image will be adapted to accommodate the higher of the input image quality and the drop image quality."}, {"cmd": "jpegtran", "option": "-drop", "sent": "The trim option can be used with the drop option to requantize the drop image to match the input image."}, {"cmd": "jpegtran", "option": "-drop", "sent": "Note that a grayscale image can be dropped into a full-color image or vice versa, as long as the full-color image has no vertical subsampling."}, {"cmd": "jpegtran", "option": "-drop", "sent": "If the input image is grayscale and the drop image is full-color, then the chrominance channels from the drop image will be discarded."}, {"cmd": "jpegtran", "option": "-drop", "sent": "Other not-strictly-lossless transformation switches are"}, {"cmd": "jpegtran", "option": "-grayscale", "sent": "Force grayscale output."}, {"cmd": "jpegtran", "option": "-grayscale", "sent": "This option discards the chrominance channels if the input image is YCbCr (ie, a standard color JPEG), resulting in a grayscale JPEG file."}, {"cmd": "jpegtran", "option": "-grayscale", "sent": "The luminance channel is preserved exactly, so this is a better method of reducing to grayscale than decompression, conversion, and recompression."}, {"cmd": "jpegtran", "option": "-grayscale", "sent": "This switch is particularly handy for fixing a monochrome picture that was mistakenly encoded as a color JPEG."}, {"cmd": "jpegtran", "option": "-grayscale", "sent": "(In such a case, the space savings from getting rid of the near-empty chroma channels wont be large; but the decoding time for a grayscale JPEG is substantially less than that for a color JPEG jpegtran also recognizes these switches that control what to do with extra markers, such as comment blocks:"}, {"cmd": "jpegtran", "option": "-copy", "sent": "Copy no extra markers from source file."}, {"cmd": "jpegtran", "option": "-copy", "sent": "This setting suppresses all comments and other metadata in the source file."}, {"cmd": "jpegtran", "option": "-copy", "sent": "Copy only comment markers."}, {"cmd": "jpegtran", "option": "-copy", "sent": "This setting copies comments from the source file but discards any other metadata."}, {"cmd": "jpegtran", "option": "-copy", "sent": "Copy only ICC profile markers."}, {"cmd": "jpegtran", "option": "-copy", "sent": "This setting copies the ICC profile from the source file but discards any other metadata."}, {"cmd": "jpegtran", "option": "-copy", "sent": "Copy all extra markers."}, {"cmd": "jpegtran", "option": "-copy", "sent": "This setting preserves miscellaneous markers found in the source file, such as JFIF thumbnails, Exif data, and Photoshop settings."}, {"cmd": "jpegtran", "option": "-copy", "sent": "In some files, these extra markers can be sizable."}, {"cmd": "jpegtran", "option": "-copy", "sent": "Note that this option will copy thumbnails as-is; they will not be transformed."}, {"cmd": "jpegtran", "option": "-copy", "sent": "The default behavior is -copy comments."}, {"cmd": "jpegtran", "option": "-copy", "sent": "(Note: in IJG releases v6 and v6a, jpegtran always did the equivalent of -copy none Additional switches recognized by jpegtran"}, {"cmd": "jpegtran", "option": "-copy", "sent": "are"}, {"cmd": "jpegtran", "option": "-icc", "sent": "Embed ICC color management profile contained in the specified file."}, {"cmd": "jpegtran", "option": "-maxmemory", "sent": "Set limit for amount of memory to use in processing large images."}, {"cmd": "jpegtran", "option": "-maxmemory", "sent": "Value is in thousands of bytes, or millions of bytes if M is attached to the number."}, {"cmd": "jpegtran", "option": "-maxmemory", "sent": "For example, -max 4m selects 4000000 bytes."}, {"cmd": "jpegtran", "option": "-maxmemory", "sent": "If more space is needed, an error will occur."}, {"cmd": "jpegtran", "option": "-maxscans", "sent": "Abort if the input image contains more than N scans."}, {"cmd": "jpegtran", "option": "-maxscans", "sent": "This feature demonstrates a method by which applications can guard against denial-of-service attacks instigated by specially-crafted malformed JPEG images containing numerous scans with missing image data or image data consisting only of EOB runs (a feature of progressive JPEG images that allows potentially hundreds of thousands of adjoining zero-value pixels to be represented using only a few bytes Attempting to transform such malformed JPEG images can cause excessive CPU activity, since the decompressor must fully process each scan (even if the scan is corrupt) before it can proceed to the next scan."}, {"cmd": "jpegtran", "option": "-outfile", "sent": "Send output image to the named file, not to standard output."}, {"cmd": "jpegtran", "option": "-report", "sent": "Report transformation progress."}, {"cmd": "jpegtran", "option": "-strict", "sent": "Treat all warnings as fatal."}, {"cmd": "jpegtran", "option": "-strict", "sent": "This feature also demonstrates a method by which applications can guard against attacks instigated by specially-crafted malformed JPEG images."}, {"cmd": "jpegtran", "option": "-strict", "sent": "Enabling this option will cause the decompressor to abort if the input image contains incomplete or corrupt image data."}, {"cmd": "jpegtran", "option": "-verbose", "sent": "Enable debug printout."}, {"cmd": "jpegtran", "option": "-verbose", "sent": "More -v s give more output."}, {"cmd": "jpegtran", "option": "-verbose", "sent": "Also, version information is printed at startup."}, {"cmd": "jpegtran", "option": "-version", "sent": "Print version information and exit."}], "implicit_rsent": []}